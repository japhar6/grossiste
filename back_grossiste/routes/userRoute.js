const express = require("express");
const userController = require("../controllers/UserController");
const upload = require("../config/multerUser");
const authenticateJWT = require("../config/middleware/authenticateJWT");
const authenticateAdmin = require("../config/middleware/authenticateAdmin");

const router = express.Router();

// ğŸ“Œ Enregistrement d'un utilisateur (Admin & Personnel) - AccÃ¨s rÃ©servÃ© Ã  l'admin
router.post("/register", authenticateJWT, authenticateAdmin, upload.single("photo"), userController.register);

// ğŸ“Œ CrÃ©ation d'un admin - Accessible Ã  tous (1er admin)
router.post("/create-admin", upload.single("photo"), userController.createAdmin);

// ğŸ“Œ Connexion - Accessible par tous les utilisateurs
router.post("/login", userController.login);

// ğŸ“Œ Obtenir tous les utilisateurs - Admin uniquement
router.get("/tout", authenticateJWT, authenticateAdmin, userController.getAllUsers);


// ğŸ“Œ Obtenir un utilisateur spÃ©cifique - Accessible par l'utilisateur lui-mÃªme ou un admin
router.get("/tout/:id", authenticateJWT, userController.getUserById);

// Route pour obtenir un utilisateur spÃ©cifique - accessible par admin uniquement
router.get("/seul/:id", authenticateJWT, userController.getUserById);


// ğŸ“Œ Mise Ã  jour du profil utilisateur - L'utilisateur peut mettre Ã  jour son propre profil
router.put("/:id", authenticateJWT, upload.single("photo"), userController.updateUser);

// ğŸ“Œ Suppression d'un utilisateur - Admin uniquement
router.delete("/:id", authenticateJWT, authenticateAdmin, userController.deleteUser);

module.exports = router;
